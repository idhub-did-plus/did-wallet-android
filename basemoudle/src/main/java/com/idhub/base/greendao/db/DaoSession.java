package com.idhub.base.greendao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.idhub.base.greendao.entity.AssetsContractAddress;
import com.idhub.base.greendao.entity.AssetsModel;
import com.idhub.base.greendao.entity.IdentityEntity;
import com.idhub.base.greendao.entity.IdHubMessageEntity;
import com.idhub.base.greendao.entity.TransactionRecordEntity;
import com.idhub.base.greendao.entity.UploadFileEntity;
import com.idhub.base.greendao.entity.UploadIDHubInfoEntity;

import com.idhub.base.greendao.db.AssetsContractAddressDao;
import com.idhub.base.greendao.db.AssetsModelDao;
import com.idhub.base.greendao.db.IdentityEntityDao;
import com.idhub.base.greendao.db.IdHubMessageEntityDao;
import com.idhub.base.greendao.db.TransactionRecordEntityDao;
import com.idhub.base.greendao.db.UploadFileEntityDao;
import com.idhub.base.greendao.db.UploadIDHubInfoEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig assetsContractAddressDaoConfig;
    private final DaoConfig assetsModelDaoConfig;
    private final DaoConfig identityEntityDaoConfig;
    private final DaoConfig idHubMessageEntityDaoConfig;
    private final DaoConfig transactionRecordEntityDaoConfig;
    private final DaoConfig uploadFileEntityDaoConfig;
    private final DaoConfig uploadIDHubInfoEntityDaoConfig;

    private final AssetsContractAddressDao assetsContractAddressDao;
    private final AssetsModelDao assetsModelDao;
    private final IdentityEntityDao identityEntityDao;
    private final IdHubMessageEntityDao idHubMessageEntityDao;
    private final TransactionRecordEntityDao transactionRecordEntityDao;
    private final UploadFileEntityDao uploadFileEntityDao;
    private final UploadIDHubInfoEntityDao uploadIDHubInfoEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        assetsContractAddressDaoConfig = daoConfigMap.get(AssetsContractAddressDao.class).clone();
        assetsContractAddressDaoConfig.initIdentityScope(type);

        assetsModelDaoConfig = daoConfigMap.get(AssetsModelDao.class).clone();
        assetsModelDaoConfig.initIdentityScope(type);

        identityEntityDaoConfig = daoConfigMap.get(IdentityEntityDao.class).clone();
        identityEntityDaoConfig.initIdentityScope(type);

        idHubMessageEntityDaoConfig = daoConfigMap.get(IdHubMessageEntityDao.class).clone();
        idHubMessageEntityDaoConfig.initIdentityScope(type);

        transactionRecordEntityDaoConfig = daoConfigMap.get(TransactionRecordEntityDao.class).clone();
        transactionRecordEntityDaoConfig.initIdentityScope(type);

        uploadFileEntityDaoConfig = daoConfigMap.get(UploadFileEntityDao.class).clone();
        uploadFileEntityDaoConfig.initIdentityScope(type);

        uploadIDHubInfoEntityDaoConfig = daoConfigMap.get(UploadIDHubInfoEntityDao.class).clone();
        uploadIDHubInfoEntityDaoConfig.initIdentityScope(type);

        assetsContractAddressDao = new AssetsContractAddressDao(assetsContractAddressDaoConfig, this);
        assetsModelDao = new AssetsModelDao(assetsModelDaoConfig, this);
        identityEntityDao = new IdentityEntityDao(identityEntityDaoConfig, this);
        idHubMessageEntityDao = new IdHubMessageEntityDao(idHubMessageEntityDaoConfig, this);
        transactionRecordEntityDao = new TransactionRecordEntityDao(transactionRecordEntityDaoConfig, this);
        uploadFileEntityDao = new UploadFileEntityDao(uploadFileEntityDaoConfig, this);
        uploadIDHubInfoEntityDao = new UploadIDHubInfoEntityDao(uploadIDHubInfoEntityDaoConfig, this);

        registerDao(AssetsContractAddress.class, assetsContractAddressDao);
        registerDao(AssetsModel.class, assetsModelDao);
        registerDao(IdentityEntity.class, identityEntityDao);
        registerDao(IdHubMessageEntity.class, idHubMessageEntityDao);
        registerDao(TransactionRecordEntity.class, transactionRecordEntityDao);
        registerDao(UploadFileEntity.class, uploadFileEntityDao);
        registerDao(UploadIDHubInfoEntity.class, uploadIDHubInfoEntityDao);
    }
    
    public void clear() {
        assetsContractAddressDaoConfig.clearIdentityScope();
        assetsModelDaoConfig.clearIdentityScope();
        identityEntityDaoConfig.clearIdentityScope();
        idHubMessageEntityDaoConfig.clearIdentityScope();
        transactionRecordEntityDaoConfig.clearIdentityScope();
        uploadFileEntityDaoConfig.clearIdentityScope();
        uploadIDHubInfoEntityDaoConfig.clearIdentityScope();
    }

    public AssetsContractAddressDao getAssetsContractAddressDao() {
        return assetsContractAddressDao;
    }

    public AssetsModelDao getAssetsModelDao() {
        return assetsModelDao;
    }

    public IdentityEntityDao getIdentityEntityDao() {
        return identityEntityDao;
    }

    public IdHubMessageEntityDao getIdHubMessageEntityDao() {
        return idHubMessageEntityDao;
    }

    public TransactionRecordEntityDao getTransactionRecordEntityDao() {
        return transactionRecordEntityDao;
    }

    public UploadFileEntityDao getUploadFileEntityDao() {
        return uploadFileEntityDao;
    }

    public UploadIDHubInfoEntityDao getUploadIDHubInfoEntityDao() {
        return uploadIDHubInfoEntityDao;
    }

}
